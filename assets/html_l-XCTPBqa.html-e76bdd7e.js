import{_ as e,D as l,V as c,W as o,a0 as a,X as i,Y as n,Z as t,$ as u}from"./framework-e0f7ab62.js";const d={},r={href:"http://www.imooc.com",target:"_blank",rel:"noopener noreferrer"};function k(g,s){const p=l("ExternalLinkIcon");return c(),o("div",null,[s[3]||(s[3]=a(`<h1 id="html-css基础" tabindex="-1"><a class="header-anchor" href="#html-css基础" aria-hidden="true">#</a> html+css基础</h1><h2 id="html和css的关系" tabindex="-1"><a class="header-anchor" href="#html和css的关系" aria-hidden="true">#</a> Html和CSS的关系</h2><p>学习web前端开发基础技术需要掌握：HTML、CSS、JavaScript语言。下面我们就来了解下这三门技术都是用来实现什么的：</p><ol><li><p>HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。</p></li><li><p>CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。</p></li><li><p>JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。</p></li></ol><h2 id="标签大小写" tabindex="-1"><a class="header-anchor" href="#标签大小写" aria-hidden="true">#</a> 标签大小写</h2><ol><li>HTML标签不区分大小写，<code>&lt;h1&gt;和&lt;H1&gt;</code>是一样的，但建议小写，因为大部分程序员都以小写为准。</li></ol><h2 id="固定的结构" tabindex="-1"><a class="header-anchor" href="#固定的结构" aria-hidden="true">#</a> 固定的结构</h2><p>一个HTML文件是有自己固定的结构的。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码讲解：</p><ol><li><code>&lt;html&gt;&lt;/html&gt;</code>称为根标签，所有的网页标签都在<code>&lt;html&gt;</code>...<code>&lt;/html&gt;</code>中。</li><li><code>&lt;head&gt;</code> 标签用于定义文档的头部，它是所有头部元素的容器。头部元素有<code>&lt;title&gt;、&lt;script&gt;、 &lt;style&gt;、&lt;link&gt;、 &lt;meta&gt;</code>等标签，头部标签在下一小节中会有详细介绍。</li><li>在<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>标签之间的内容是网页的主要内容，如<code>&lt;h1&gt;、&lt;p&gt;、&lt;a&gt;、&lt;img&gt;</code>等网页内容标签，在这里的标签中的内容会在浏览器中显示出来。</li></ol><h2 id="head-部分" tabindex="-1"><a class="header-anchor" href="#head-部分" aria-hidden="true">#</a> head 部分</h2><ol><li>下面这些标签可用在 head 部分：</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">...</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>代码注释不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。</li></ol><p>语法：</p>`,16)),i("注释文字 "),s[4]||(s[4]=a(`<ol start="3"><li>CSS注释代码</li></ol><p>就像在Html的注释一样，在CSS中也有注释语句：用/<em>注释语句</em>/来标明（Html中使用<!--注释语句-->)</p><h2 id="语义化" tabindex="-1"><a class="header-anchor" href="#语义化" aria-hidden="true">#</a> 语义化</h2><ol><li><p>语义化：说的通俗点就是：明白每个标签的用途（在什么情况下我可以使用这个标签才合理）比如，网页上的文章的标题就得用标题标签，网页上的各个栏目的栏目名称也可以使用标题标签。</p></li><li><p>语义化的作用</p></li></ol><ul><li><p>更容易被搜索引擎收录。</p></li><li><p>更容易让屏幕阅读器读出网页内容。</p></li></ul><h1 id="认识标签-第一部分" tabindex="-1"><a class="header-anchor" href="#认识标签-第一部分" aria-hidden="true">#</a> 认识标签（第一部分）</h1><h2 id="p" tabindex="-1"><a class="header-anchor" href="#p" aria-hidden="true">#</a> <code>&lt;p&gt;</code></h2><p>如果想在网页上显示文章，这时就需要<code>&lt;p&gt;</code>标签了，把文章的段落放到<code>&lt;p&gt;</code>标签中。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="hx" tabindex="-1"><a class="header-anchor" href="#hx" aria-hidden="true">#</a> <code>&lt;hx&gt;</code></h2><p>标题标签一共有6个，h1、h2、h3、h4、h5、h6分别为一级标题、二级标题、三级标题、四级标题、五级标题、六级标题。并且依据重要性递减。<code>&lt;h1&gt;</code>是最高的等级。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hx</span><span class="token punctuation">&gt;</span></span>标题文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hx</span><span class="token punctuation">&gt;</span></span>(x为1-6)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文章的标题前面已经说过了，可以使用标题标签，另外网页上的各个栏目的标题也可使用它们</p><h2 id="strong-em" tabindex="-1"><a class="header-anchor" href="#strong-em" aria-hidden="true">#</a> <code>&lt;strong&gt;/&lt;em&gt;</code></h2><p>有了段落又有了标题，现在如果想在一段话中特别强调某几个文字，这时候就可以用到<code>&lt;em&gt;</code>或<code>&lt;strong&gt;</code>标签。</p><p>但两者在强调的语气上有区别:<code>&lt;em&gt;</code> 表示强调，<code>&lt;strong&gt;</code> 表示更强烈的强调。并且在浏览器中<code>&lt;em&gt;</code> 默认用斜体表示，<code>&lt;strong&gt;</code> 用粗体表示。两个标签相比，目前国内前端程序员更喜欢使用<code>&lt;strong&gt;</code>表示强调</p><h2 id="em-、-strong-、-span-的区别" tabindex="-1"><a class="header-anchor" href="#em-、-strong-、-span-的区别" aria-hidden="true">#</a> <code>&lt;em&gt;、&lt;strong&gt;、&lt;span&gt;</code>的区别</h2><ol><li><p><code>&lt;em&gt;</code>和<code>&lt;strong&gt;</code>标签是为了强调一段话中的关键字时使用，它们的语义是强调。</p></li><li><p><code>&lt;span&gt;</code>标签是没有语义的，它的作用就是为了设置单独的样式用的，把一段话圈起来，然后用css设置样式。</p></li></ol><h2 id="q-blockquote" tabindex="-1"><a class="header-anchor" href="#q-blockquote" aria-hidden="true">#</a> <code>&lt;q&gt;/&lt;blockquote&gt;</code></h2><h3 id="q标签-短文本引用" tabindex="-1"><a class="header-anchor" href="#q标签-短文本引用" aria-hidden="true">#</a> q标签，短文本引用</h3><p>比如在你的网页的文章里想引用某个作家的一句诗，这样会使你的文章更加出彩，那么<code>&lt;q&gt;</code>标签是你所需要的。 语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q</span><span class="token punctuation">&gt;</span></span>引用文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>注意要引用的文本不用加双引号，浏览器会对q标签自动添加双引号。</p></li><li><p>注意这里用<code>&lt;q&gt;</code>标签的真正关键点不是它的默认样式双引号（如果这样我们不如自己在键盘上输入双引号就行了），而是它的语义：引用别人的话</p></li></ol><h3 id="blockquote标签-长文本引用" tabindex="-1"><a class="header-anchor" href="#blockquote标签-长文本引用" aria-hidden="true">#</a> blockquote标签，长文本引用</h3><p><code>&lt;blockquote&gt;</code>的作用也是引用别人的文本。但它是对长文本的引用</p><p><code>&lt;q&gt;</code>标签是对简短文本的引用，比如说引用一句话就用到<code>&lt;q&gt;</code>标签。</p><p>语法:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">&gt;</span></span>引用文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>浏览器对<code>&lt;blockquote&gt;</code>标签的解析是缩进样式</p><h2 id="br" tabindex="-1"><a class="header-anchor" href="#br" aria-hidden="true">#</a> <code>&lt;br/&gt;</code></h2><p>换行标签<code>&lt;br/&gt;</code><code>&lt;br/&gt;</code>标签作用相当于word文档中的回车。只有一个开始标签，没有结束标签。</p><h2 id="hr" tabindex="-1"><a class="header-anchor" href="#hr" aria-hidden="true">#</a> <code>&lt;hr/&gt;</code></h2><p>分割线标签<code>&lt;hr/&gt;</code><code>&lt;hr/&gt;</code>标签的在浏览器中的默认样式线条比较粗，颜色为灰色</p><h2 id="nbsp" tabindex="-1"><a class="header-anchor" href="#nbsp" aria-hidden="true">#</a> <code>&amp;nbsp;</code></h2><p>html特殊字符</p><p>空格：<code>&amp;nbsp;</code>(;分号必不可少)</p><h2 id="address" tabindex="-1"><a class="header-anchor" href="#address" aria-hidden="true">#</a> <code>&lt;address&gt;</code></h2><p>address标签，为网页加入地址信息</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>地址信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如：</p><p><code>&lt;address&gt;</code>北京市西城区德外大街10号<code>&lt;/address&gt;</code></p><p>在浏览器上显示的样式为斜体，如果不喜欢斜体，当然可以，可以在后面的课程中使用css样式来修改它<code>&lt;address&gt;</code>标签的默认样式</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> <code>&lt;code&gt;</code></h2><p>在介绍语言技术的网站中，必免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，你就可以使用<code>&lt;code&gt;</code>标签了，如下面例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>var i=i+300;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>代码语言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：在文章中一般如果要插入多行代码时不能使用<code>&lt;code&gt;</code>标签，如果是多行代码，可以使用<code>&lt;pre&gt;</code>标签。</p><p><code>&lt;pre&gt;</code> 标签的主要作用:预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。如果用以前的方法，回车需要输入<code>&lt;br&gt;</code>签，空格需要输入<code>&amp;nbsp;</code>。</p><p>注意：<code>&lt;pre&gt;</code>标签不只是为显示计算机的源代码时用的，在你需要在网页中预显示格式时都可以使用它，只是<code>&lt;pre&gt;</code>标签的一个常见应用就是用来展示计算机的源代码。</p><h1 id="认识标签-第二部分" tabindex="-1"><a class="header-anchor" href="#认识标签-第二部分" aria-hidden="true">#</a> 认识标签（第二部分）</h1><h2 id="无序列表" tabindex="-1"><a class="header-anchor" href="#无序列表" aria-hidden="true">#</a> 无序列表</h2><p>ul-li是没有前后顺序的信息列表。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    ......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>精彩少年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>美丽突然出现<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>触动心灵的旋律<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ul-li在网页中显示的默认样式一般为：每项li前都自带一个圆点</p><h2 id="有序列表" tabindex="-1"><a class="header-anchor" href="#有序列表" aria-hidden="true">#</a> 有序列表</h2><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    ......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><p>下面是一个热点课程下载排行榜：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>前端开发面试心法 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>零基础学习html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>JavaScript全攻略<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;ol&gt;</code>在网页中显示的默认样式一般为：每项<code>&lt;li&gt;</code>前都自带一个序号，序号默认从1开始</p><h2 id="div-容器标签" tabindex="-1"><a class="header-anchor" href="#div-容器标签" aria-hidden="true">#</a> <code>&lt;div&gt;</code>容器标签</h2><p>在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个<code>&lt;div&gt;</code>标签中，这个<code>&lt;div&gt;</code>标签的作用就相当于一个容器。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>…<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确定逻辑部分：</p><p>什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的栏目版块，就是一个典型的逻辑部分。如下图所示：图中用红色边框标出的部分就是一个逻辑部分，就可以使用<code>&lt;div&gt;</code>标签作为容器</p><p>注释：<code>&lt;div&gt;</code> 是一个块级元素，也就是说，浏览器通常会在 div 元素前后放置一个换行符。</p><h2 id="创建表格" tabindex="-1"><a class="header-anchor" href="#创建表格" aria-hidden="true">#</a> 创建表格</h2><p>创建表格的五个元素：</p><p>table、tbody、tr、th、td</p><ol><li><p><code>&lt;table&gt;…&lt;/table&gt;</code>：整个表格以<code>&lt;table&gt;</code>标记开始、<code>&lt;/table&gt;</code>标记结束。</p></li><li><p><code>&lt;tbody&gt;…&lt;/tbody&gt;</code>：当表格内容非常多时，表格会下载一点显示一点，但如果加上<code>&lt;tbody&gt;</code>标签后，这个表格就要等表格内容全部下载完才会显示。如右侧代码编辑器中的代码。（这个标签基本上不怎么用了）</p></li><li><p><code>&lt;tr&gt;…&lt;/tr&gt;</code>：表格的一行，所以有几对tr 表格就有几行。</p></li><li><p><code>&lt;td&gt;…&lt;/td&gt;</code>：表格的一个单元格，一行中包含几对<code>&lt;td&gt;...&lt;td/&gt;</code>，说明一行中就有几列。</p></li><li><p><code>&lt;th&gt;…&lt;/th&gt;</code>：表格的头部的一个单元格，表格表头。</p></li><li><p>表格中列的个数，取决于一行中数据单元格的个数。</p></li></ol><p>表格还是需要添加一些标签进行优化，可以添加标题和摘要</p><p><code>&lt;table summary=&quot;本表格记录2012年到2013年库存记录，记录包括U盘和耳机库存量&quot;&gt;</code></p><p><code>&lt;caption&gt;2012年到2013年库存记录&lt;/caption&gt;</code></p><h2 id="超链接" tabindex="-1"><a class="header-anchor" href="#超链接" aria-hidden="true">#</a> 超链接</h2><p>使用<code>&lt;a&gt;</code>标签，链接到别一个页面</p><p>使用<code>&lt;a&gt;</code>标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>目标网址<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>链接显示的文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>http://www.imooc.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>click here!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,89)),n("p",null,[s[1]||(s[1]=t("上面例子作用是单击click here!文字，网页链接到",-1)),n("a",r,[s[0]||(s[0]=t("慕课网",-1)),u(p)]),s[2]||(s[2]=t("这个网页。",-1))]),s[5]||(s[5]=a(`<h2 id="网页插入图片" tabindex="-1"><a class="header-anchor" href="#网页插入图片" aria-hidden="true">#</a> 网页插入图片</h2><p>认识<code>&lt;img&gt;</code>标签，为网页插入图片</p><p>在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用<code>&lt;img&gt;</code>标签来插入图片。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>图片地址<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>下载失败时的替换文本<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>提示文本<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>myimage.gif<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>My Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>My Image<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>讲解：</p><ol><li><p>src：标识图像的位置；</p></li><li><p>alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；</p></li><li><p>title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</p></li><li><p>图像可以是GIF，PNG，JPEG格式的图像文件。</p></li></ol><h1 id="表单标签-与用户进行交互" tabindex="-1"><a class="header-anchor" href="#表单标签-与用户进行交互" aria-hidden="true">#</a> 表单标签（与用户进行交互）</h1><h2 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> <code>&lt;form&gt;</code></h2><p>表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>传送方式<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>服务器文件<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>讲解：</p><ol><li><p><code>&lt;form&gt;</code> ：<code>&lt;form&gt;</code>标签是成对出现的，以<code>&lt;form&gt;</code>开始，以<code>&lt;/form&gt;</code>结束。</p></li><li><p>action ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。</p></li><li><p>method ： 数据传送的方式（get/post）。</p></li></ol><h2 id="input" tabindex="-1"><a class="header-anchor" href="#input" aria-hidden="true">#</a> <code>&lt;input&gt;</code></h2><p><code>&lt;input&gt;</code>输入框</p><p>文本输入框、密码输入框</p><p>当用户要在表单中键入字母、数字等内容时，就会用到文本输入框。文本框也可以转化为密码输入框。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>名称<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>文本<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>type：</li></ol><p>当type=&quot;text&quot;时，输入框为文本输入框;</p><p>当type=&quot;password&quot;时, 输入框为密码输入框。</p><ol start="2"><li><p>name：为文本框命名，以备后台程序ASP 、PHP使用。</p></li><li><p>value：为文本输入框设置默认值。(一般起到提示作用)</p></li></ol><h2 id="textarea" tabindex="-1"><a class="header-anchor" href="#textarea" aria-hidden="true">#</a> <code>&lt;textarea&gt;</code></h2><p>文本域，支持多行文本输入</p><p>当用户需要在表单中输入大段文字时，需要用到文本输入域。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>行数<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>列数<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p><code>&lt;textarea&gt;</code>标签是成对出现的，以<code>&lt;textarea&gt;</code>开始，以<code>&lt;/textarea&gt;</code>结束。</p></li><li><p>cols ：多行输入域的列数。</p></li><li><p>rows ：多行输入域的行数。</p></li></ol><h2 id="单选框-复选框" tabindex="-1"><a class="header-anchor" href="#单选框-复选框" aria-hidden="true">#</a> 单选框，复选框</h2><p>单选框，复选框</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio/checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>值<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>名称<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checked<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>type:</p><p>当type=&quot;radio&quot;时，控件为单选框</p><p>当type=&quot;checkbox&quot;时，控件为复选框</p></li><li><p>value：提交数据到服务器的值（后台程序PHP使用）</p></li><li><p>name：为控件命名，以备后台程序ASP、PHP使用</p></li><li><p>checked：当设置checked=&quot;checked&quot;时，该选项被默认选中</p></li></ol><p>注意：同一组的单选按钮，name取值一定要一致，这样同一组的单选按钮才可以起到单选的作用。</p><h2 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> <code>&lt;select&gt;</code></h2><p>下拉列表框，节省空间</p><p>下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交值<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>选项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提交值是向服务器提交的值，选项是显示的值。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>save.php<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>看书<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>看书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>旅游<span class="token punctuation">&quot;</span></span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>旅游<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>运动<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>运动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>购物<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>购物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下拉列表框进行多选" tabindex="-1"><a class="header-anchor" href="#下拉列表框进行多选" aria-hidden="true">#</a> 下拉列表框进行多选</h2><p>使用下拉列表框进行多选</p><p>下拉列表也可以进行多选操作，在<code>&lt;select&gt;</code>标签中设置<code>multiple=&quot;multiple&quot;</code>属性，</p><p>就可以实现多选功能，进行多选时按下Ctrl键同时进行单击，可以选择多个选项。</p><p>如下代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>save.php<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multiple<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>看书<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>看书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>旅游<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>旅游<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>运动<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>运动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>购物<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>购物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提交按钮" tabindex="-1"><a class="header-anchor" href="#提交按钮" aria-hidden="true">#</a> 提交按钮</h2><p>提交按钮：当用户需要提交表单信息到服务器时，需要用到提交按钮。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>type：只有当type值设置为submit时，按钮才有提交作用</p></li><li><p>value：按钮上显示的文字</p></li></ol><h2 id="重置按钮" tabindex="-1"><a class="header-anchor" href="#重置按钮" aria-hidden="true">#</a> 重置按钮</h2><p>重置按钮，重置表单信息</p><p>当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按钮使输入框恢复到初始状态。只需要把type设置为&quot;reset&quot;就可以。</p><p>语法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>reset<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>重置<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>type：只有当type值设置为reset时，按钮才有重置作用</p></li><li><p>value：按钮上显示的文字</p></li></ol><h1 id="css样式" tabindex="-1"><a class="header-anchor" href="#css样式" aria-hidden="true">#</a> css样式</h1><h2 id="认识css样式" tabindex="-1"><a class="header-anchor" href="#认识css样式" aria-hidden="true">#</a> 认识css样式</h2><p>CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。</p><p>如下列代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用CSS样式的一个好处是通过定义某个样式，可以让不同网页位置的文字有着统一的字体、字号或者颜色等。</p><h2 id="css代码语法" tabindex="-1"><a class="header-anchor" href="#css代码语法" aria-hidden="true">#</a> CSS代码语法</h2><p>css 样式由选择符和声明组成，而声明又由属性和值组成</p>`,70)),s[6]||(s[6]=n("p",{"属性:值":""},"选择符",-1)),s[7]||(s[7]=a(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选择符：又称选择器，指明网页中要应用样式规则的元素，如本例中是网页中所有的段（p）的文字将变成蓝色，而其他的元素（如ol）不会受到影响。</p><p>声明：在英文大括号“｛｝”中的的就是声明，属性和值之间用英文冒号“：”分隔。当有多条声明时，中间可以英文分号“;”分隔，如下所示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="插入形式" tabindex="-1"><a class="header-anchor" href="#插入形式" aria-hidden="true">#</a> 插入形式</h2><p>从CSS 样式代码插入的形式来看基本可以分为以下3种：</p><p>内联式、嵌入式和外部式三种</p><ol><li>内联式css样式</li></ol><p>就是把css代码直接写在现有的HTML标签中，如下面代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;p style=<span class="token string">&quot;color:red&quot;</span>&gt;这里文字是红色。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>css样式代码要写在style=&quot;&quot;双引号中，如果有多条css样式代码设置可以写在一起，中间用分号隔开。如下代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;p style=<span class="token string">&quot;color:red;font-size:12px&quot;</span>&gt;这里文字是红色。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>嵌入式css样式，</li></ol><p>就是可以把css样式代码写在<code>&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code>标签之间。如下面代码实现把三个<code>&lt;span&gt;</code>标签中的文字设置为红色：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;style type=&quot;text/css&quot;&gt;
span</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>嵌入式css样式必须写在<code>&lt;style&gt;&lt;/style&gt;</code>之间，并且一般情况下嵌入式css样式写在<code>&lt;head&gt;&lt;/head&gt;</code>之间。</p><ol start="3"><li>外部式css样式</li></ol><p>写在单独的一个文件中</p><p>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在<code>&lt;head&gt;</code>内（不是在<code>&lt;style&gt;</code>标签内）使用<code>&lt;link&gt;</code>标签将css样式文件链接到HTML文件内，如下面代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>base.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意：</strong></p><ol><li><p>css样式文件名称以有意义的英文字母命名，如 main.css。</p></li><li><p><code>rel=&quot;stylesheet&quot; type=&quot;text/css&quot;</code> 是固定写法不可修改。</p></li><li><p><code>&lt;link&gt;</code>标签位置一般写在<code>&lt;head&gt;</code>标签之内。</p></li></ol><h1 id="css选择器" tabindex="-1"><a class="header-anchor" href="#css选择器" aria-hidden="true">#</a> CSS选择器</h1><p>每一条css样式定义由两部分组成，形式如下：</p><p>选择器{</p><p>样式;</p><p>}</p><p>在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素</p><h2 id="标签选择器" tabindex="-1"><a class="header-anchor" href="#标签选择器" aria-hidden="true">#</a> 标签选择器</h2><p>标签选择器其实就是html代码中的标签。如右侧代码编辑器中的<code>&lt;html&gt;、&lt;body&gt;、&lt;h1&gt;、&lt;p&gt;、&lt;img&gt;</code>。例如下面代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>1.6em<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的css样式代码的作用：为p标签设置12px字号，行间距设置1.6em的样式。</p><h2 id="类选择器" tabindex="-1"><a class="header-anchor" href="#类选择器" aria-hidden="true">#</a> 类选择器</h2><p>类选择器在css样式编码中是最常用到的，如右侧代码编辑器中的代码:可以实现为“胆小如鼠”、“勇气”字体设置为红色。</p><p>语法：</p><p><code>.类选器名称{css样式代码;}</code></p><p>注意：</p><ol><li><p>英文圆点开头</p></li><li><p>其中类选器名称可以任意起名（但不要起中文噢）</p></li></ol><p>使用方法：</p><p>第一步：使用合适的标签把要修饰的内容标记起来，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>胆小如鼠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二步：使用class=&quot;类选择器名称&quot;为标签设置一个类，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>胆小如鼠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第三步：设置类选器css样式，如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.stress</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*类前面要加入一个英文圆点*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="id选择器" tabindex="-1"><a class="header-anchor" href="#id选择器" aria-hidden="true">#</a> ID选择器</h2><p>在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：</p><ol><li><p>为标签设置id=&quot;ID名称&quot;，而不是class=&quot;类名称&quot;。</p></li><li><p>ID选择符的前面是井号（#）号，而不是英文圆点（.）。</p></li></ol><h2 id="类和id选择器的区别" tabindex="-1"><a class="header-anchor" href="#类和id选择器的区别" aria-hidden="true">#</a> 类和ID选择器的区别</h2><p>相同点：可以应用于任何元素</p><p>不同点：</p><ol><li>ID选择器只能在文档中使用一次。与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。而类选择器可以使用多次。</li></ol><p>下面代码是正确的：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>三年级时，我还是一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>胆小如鼠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>勇气<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>来回答老师提出的问题。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而下面代码是错误的：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>三年级时，我还是一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>胆小如鼠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>勇气<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>来回答老师提出的问题。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>可以使用类选择器词列表方法为一个元素同时设置多个样式。我们可以为一个元素同时设多个样式，但只可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。</li></ol><p>下面的代码是正确的(完整代码见右侧代码编辑器)</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.stress</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red
<span class="token punctuation">}</span>
<span class="token selector">.bigsize</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>25px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>到了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stress bigsize<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>三年级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>下学期时，我们班上了一节公开课...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面代码的作用是为“三年级”三个文字设置文本颜色为红色并且字号为25px</p><p>下面的代码是不正确的(完整代码见右侧代码编辑器)</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#stressid</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#bigsizeid</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>25px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>到了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stressid bigsizeid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>三年级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>下学期时，我们班上了一节公开课...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面代码不可以实现为“三年级”三个文字设置文本颜色为红色并且字号为25px的作用。</p><h2 id="子选择器" tabindex="-1"><a class="header-anchor" href="#子选择器" aria-hidden="true">#</a> 子选择器</h2><p>还有一个比较有用的选择器子选择器，即大于符号(&gt;),用于选择指定标签元素的子元素。如下面的代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.food&gt;li</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这行代码会使class名为food下的子元素li加入红色实线边框。</p><h2 id="包含-后代-选择器" tabindex="-1"><a class="header-anchor" href="#包含-后代-选择器" aria-hidden="true">#</a> 包含(后代)选择器</h2><p>包含选择器，即加入空格,用于选择指定标签元素下的后辈元素。如右侧代码编辑器中的代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.first span</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意这个选择器与子选择器的区别</p><ol><li><p>子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代</p></li><li><p>后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“&gt;”进行选择。</p></li></ol><p>总结：&gt;作用于元素的第一代后代，空格作用于元素的所有后代。</p><h1 id="通用选择器" tabindex="-1"><a class="header-anchor" href="#通用选择器" aria-hidden="true">#</a> 通用选择器</h1><p>通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中任意标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="伪类选择符" tabindex="-1"><a class="header-anchor" href="#伪类选择符" aria-hidden="true">#</a> 伪类选择符</h2><p>更有趣的是伪类选择符，为什么叫做伪类选择符，它允许给html不存在的标签设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a:hover</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这行代码会使被<code>&lt;a&gt;&lt;/a&gt;</code>标签包裹的文字内容中的“胆小如鼠”字体颜色在鼠标滑过时变为红色。</p><h2 id="分组选择符" tabindex="-1"><a class="header-anchor" href="#分组选择符" aria-hidden="true">#</a> 分组选择符</h2><p>当你想为html中多个标签元素设置同一个样式时，可以使用分组选择符（，），如下代码为右侧代码编辑器中的h1、span标签同时设置字体颜色为红色：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1,span</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它相当于下面两行代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token selector">span</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="css的继承、层叠和特殊性" tabindex="-1"><a class="header-anchor" href="#css的继承、层叠和特殊性" aria-hidden="true">#</a> CSS的继承、层叠和特殊性</h1><h2 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h2><p>CSS的某些样式是具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。</p><p>但注意有一些css样式是不具有继承性的。如border:1px solid red;</p><h2 id="权值" tabindex="-1"><a class="header-anchor" href="#权值" aria-hidden="true">#</a> 权值</h2><p>根据权值来判断使用哪个css样式</p><p>浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。</p><p>下面是权值的规则：</p><p>标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。例如下面的代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/*权值为1*/</span>

<span class="token selector">p span</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/*权值为1+1=2*/</span>

<span class="token selector">.warning</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/*权值为10*/</span>

<span class="token selector">p span.warning</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>purple<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/*权值为1+1+10=12*/</span>

<span class="token selector">#footer .note p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/*权值为100+10+1=111*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：还有一个权值比较特殊--继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低</p><h2 id="层叠" tabindex="-1"><a class="header-anchor" href="#层叠" aria-hidden="true">#</a> 层叠</h2><p>我们来思考一个问题：如果在html文件中对于同一个元素可以有多个css样式存在并且这多个css样式具有相同权重值怎么办？好，这一小节中的层叠帮你解决这个问题。</p><p>层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。</p><p>如下面代码:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>

&lt;p class=<span class="token string">&quot;first&quot;</span>&gt;三年级时，我还是一个&lt;span&gt;胆小如鼠&lt;/span&gt;的小女孩。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后 p 中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。</p><p>所以前面的css样式优先级就不难理解了：</p><p>内联样式表（标签内部）&gt; 嵌入样式表（当前文件中）&gt; 外部样式表（外部文件中）。</p><h2 id="重要性" tabindex="-1"><a class="header-anchor" href="#重要性" aria-hidden="true">#</a> 重要性</h2><p>重要性</p><p>我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。</p><p>如下代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>

&lt;p class=<span class="token string">&quot;first&quot;</span>&gt;三年级时，我还是一个&lt;span&gt;胆小如鼠&lt;/span&gt;的小女孩。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时 p 段落中的文本会显示的red红色。</p><p>注意：!important要写在分号的前面</p><h1 id="css格式化排版" tabindex="-1"><a class="header-anchor" href="#css格式化排版" aria-hidden="true">#</a> CSS格式化排版</h1><h2 id="文字排版" tabindex="-1"><a class="header-anchor" href="#文字排版" aria-hidden="true">#</a> 文字排版</h2><ol><li>文字排版--字体</li></ol><p>我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。下面我们来看一个例子，下面代码实现：为网页中的文字设置字体为宋体。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里注意不要设置不常用的字体，因为如果用户本地电脑上如果没有安装你设置的字体，就会显示浏览器默认的字体。（因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。）</p><ol start="2"><li>文字排版--字号、颜色</li></ol><p>可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666(灰色)：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#666<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>文字排版--粗体</li></ol><p>我们还可以使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文字以粗体样式显示出来。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p span</span><span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>文字排版--斜体</li></ol><p>以下代码可以实现文字以斜体样式在浏览器中显示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p a</span><span class="token punctuation">{</span><span class="token property">font-style</span><span class="token punctuation">:</span>italic<span class="token punctuation">;</span><span class="token punctuation">}</span>

&lt;p&gt;三年级时，我还是一个&lt;a&gt;胆小如鼠&lt;/a&gt;的小女孩。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>文字排版--下划线</li></ol><p>有些情况下想为文字设置为下划线样式，这样可以在视觉上强调文字，可以使用下面代码来实现：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p a</span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>underline<span class="token punctuation">;</span><span class="token punctuation">}</span>

&lt;p&gt;三年级时，我还是一个&lt;a&gt;胆小如鼠&lt;/a&gt;的小女孩。&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除线，在电商网站上经常见。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p a</span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>line-through<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="段落排版" tabindex="-1"><a class="header-anchor" href="#段落排版" aria-hidden="true">#</a> 段落排版</h2><ol><li>段落排版--缩进</li></ol><p>中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">text-indent</span><span class="token punctuation">:</span>2em<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：2em的意思就是文字的2倍大小。</p><ol start="2"><li>段落排版--行间距</li></ol><p>这一小节我们来学习一下另一个在段落排版中起重要作用的行间距属性（line-height），如下代码实现设置段落行间距为1.5倍。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">line-height</span><span class="token punctuation">:</span>1.5em<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>段落排版--字间距、字母间距</li></ol><p>文字间隔、字母间隔设置：</p><p>如果想在网页排版中设置文字间隔或者字母间隔就可以使用 letter-spacing来实现，如下面代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span><span class="token punctuation">{</span>
    <span class="token property">letter-spacing</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

...

&lt;h1&gt;了不起的盖茨比&lt;/h1&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这个样式使用在英文单词时，是设置字母与字母之间的间距。</p><p>单词间距设置：</p><p>如果我想设置英文单词之间的间距呢？可以使用word-spacing来实现。如下代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span><span class="token punctuation">{</span>
    <span class="token property">word-spacing</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
...
&lt;h1&gt;welcome to imooc!&lt;/h1&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="css盒模型" tabindex="-1"><a class="header-anchor" href="#css盒模型" aria-hidden="true">#</a> CSS盒模型</h1><h2 id="元素分类" tabindex="-1"><a class="header-anchor" href="#元素分类" aria-hidden="true">#</a> 元素分类</h2><p>在讲解CSS布局之前，我们需要提前知道一些知识，在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素和内联块状元素。</p><p>常用的块状元素有：</p><p><code>&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;...&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;</code></p><p>常用的内联元素有：</p><p><code>&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</code></p><p>常用的内联块状元素有：</p><p><code>&lt;img&gt;、&lt;input&gt;</code></p><h2 id="元素分类-块级元素" tabindex="-1"><a class="header-anchor" href="#元素分类-块级元素" aria-hidden="true">#</a> 元素分类--块级元素</h2><p>什么是块级元素？在html中<code>&lt;div&gt;、 &lt;p&gt;、&lt;h1&gt;、&lt;form&gt;、&lt;ul&gt;</code> 和 <code>&lt;li&gt;</code>就是块级元素。设置display:block就是将元素显示为块级元素。如下代码就是将行内元素a转换为块状元素，从页使用a元素具有块状元素特点。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a</span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>块级元素特点：</p><ol><li><p>每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）</p></li><li><p>元素的高度、宽度、行高以及顶和底边距都可设置。</p></li><li><p>元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。</p></li></ol><h2 id="元素分类-行内元素" tabindex="-1"><a class="header-anchor" href="#元素分类-行内元素" aria-hidden="true">#</a> 元素分类--行内元素</h2><p>在html中，<code>&lt;span&gt;、&lt;a&gt;、&lt;label&gt;、&lt;input&gt;、 &lt;img&gt;</code>、 <code>&lt;strong&gt;</code> 和<code>&lt;em&gt;</code>就是典型的行内元素（inline）元素。当然块状元素也可以通过代码display:inline将元素设置为行内元素。</p><p>行内元素特点：</p><ol><li><p>和其他元素都在一行上；</p></li><li><p>元素的高度、宽度、行高及顶部和底部边距不可设置；</p></li><li><p>元素的宽度就是它包含的文字或图片的宽度，不可改变。</p></li></ol><h2 id="元素分类-内联块状元素" tabindex="-1"><a class="header-anchor" href="#元素分类-内联块状元素" aria-hidden="true">#</a> 元素分类--内联块状元素</h2><p>内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，代码display:inline-block就是将元素设置为内联块状元素。(css2.1新增)，<code>&lt;img&gt;、&lt;input&gt;</code>标签就是这种内联块状标签。</p><p>inline-block元素特点：</p><ol><li><p>和其他元素都在一行上；</p></li><li><p>元素的高度、宽度、行高以及顶和底边距都可设置。</p></li></ol><h2 id="盒模型-边框-一" tabindex="-1"><a class="header-anchor" href="#盒模型-边框-一" aria-hidden="true">#</a> 盒模型--边框（一）</h2><p>盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。</p><p>如下面代码为div来设置边框粗细为2px、样式为实心的、颜色为红色的边框：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span>2px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面是border代码的缩写形式，可以分开写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">border-width</span><span class="token punctuation">:</span>2px<span class="token punctuation">;</span>
    <span class="token property">border-style</span><span class="token punctuation">:</span>solid<span class="token punctuation">;</span>
    <span class="token property">border-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><ol><li>border-style（边框样式）常见样式有：</li></ol><p>dashed（虚线）| dotted（点线）| solid（实线）。</p><ol start="2"><li>border-color（边框颜色）中的颜色可设置为十六进制颜色，如:</li></ol><p>border-color:#888;//前面的井号不要忘掉。</p><h2 id="盒模型-边框-二" tabindex="-1"><a class="header-anchor" href="#盒模型-边框-二" aria-hidden="true">#</a> 盒模型--边框（二）</h2><p>现在有一个问题，如果有想为p标签单独设置下边框，而其它三边都不设置边框样式怎么办呢？css样式中允许只为一个方向的边框设置样式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同样可以使用下面代码实现其它三边上、右、左边框的设置：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-top</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span>

<span class="token property">border-right</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span>

<span class="token property">border-left</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span>
···
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="盒模型-边界" tabindex="-1"><a class="header-anchor" href="#盒模型-边界" aria-hidden="true">#</a> 盒模型--边界</h2><p>元素与其它元素之间的距离可以使用边界（margin）来设置。边界也是可分为上、右、下、左。如下代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span>20px 10px 15px 30px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以分开写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果上下左右的边界都为10px;可以这么写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果上下边界一样为10px，左右一样为20px，可以这么写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span>10px 20px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>总结一下：padding和margin的区别，padding在边框里，margin在边框外。</p><h2 id="盒模型-填充" tabindex="-1"><a class="header-anchor" href="#盒模型-填充" aria-hidden="true">#</a> 盒模型--填充</h2><p>元素内容与边框之间是可以设置距离的，称之为填充。填充也可分为上、右、下、左。如下代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span>20px 10px15px 30px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>顺序一定不要搞混。可以分开写上面代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">padding-top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span>
    <span class="token property">padding-right</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span>
    <span class="token property">padding-bottom</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果上、右、下、左的填充都为10px;可以这么写</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果上下填充一样为10px，左右一样为20px，可以这么写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span>10px 20px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="盒模型代码简写" tabindex="-1"><a class="header-anchor" href="#盒模型代码简写" aria-hidden="true">#</a> 盒模型代码简写</h2><p>还记得在讲盒模型时外边距(margin)、内边距(padding)和边框(border)设置上下左右四个方向的边距是按照顺时针方向设置的：上右下左。具体应用在margin和padding的例子如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 15px 12px 14px<span class="token punctuation">;</span><span class="token comment">/*上设置为10px、右设置为15px、下设置为12px、左设置为14px*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通常有下面三种缩写方法:</p><ol><li>如果top、right、bottom、left的值相同，如下面代码：</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 10px 10px 10px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可缩写为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>如果top和bottom值相同、left和 right的值相同，如下面代码：</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 20px 10px 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可缩写为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>如果left和right的值相同，如下面代码：</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 20px 30px 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可缩写为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span>10px 20px 30px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：padding、border的缩写方法和margin是一致的。</p><h2 id="颜色值缩写" tabindex="-1"><a class="header-anchor" href="#颜色值缩写" aria-hidden="true">#</a> 颜色值缩写</h2><p>关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。</p><p>例子1：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#000000<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以缩写为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例子2：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #336699<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以缩写为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #369<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="css布局模型" tabindex="-1"><a class="header-anchor" href="#css布局模型" aria-hidden="true">#</a> CSS布局模型</h1><h2 id="css布局模型-1" tabindex="-1"><a class="header-anchor" href="#css布局模型-1" aria-hidden="true">#</a> css布局模型</h2><p>清楚了CSS 盒模型的基本概念、 盒模型类型， 我们就可以深入探讨网页布局的基本模型了。布局模型与盒模型一样都是 CSS 最基本、 最核心的概念。 但布局模型是建立在盒模型基础之上，又不同于我们常说的 CSS 布局样式或 CSS 布局模板。如果说布局模型是本，那么 CSS 布局模板就是末了，是外在的表现形式。</p><p>CSS包含3种基本的布局模型，用英文概括为：Flow、Layer 和 Float。</p><p>在网页中，元素有三种布局模型：</p><ol><li><p>流动模型（Flow）</p></li><li><p>浮动模型 (Float)</p></li><li><p>层模型（Layer）</p></li></ol><h2 id="流动模型" tabindex="-1"><a class="header-anchor" href="#流动模型" aria-hidden="true">#</a> 流动模型</h2><p>流动（Flow）：自上而下。</p><p>先来说一说流动模型，流动（Flow）是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。</p><p>流动布局模型具有2个比较典型的特征：</p><p>第一点，块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。如右侧代码编辑器中三个块状元素标签(div，h1，p)宽度显示为100%。</p><p>第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行）</p><p>右侧代码编辑器中内联元素标签a、span、em、strong都是内联元素。</p><h2 id="浮动模型" tabindex="-1"><a class="header-anchor" href="#浮动模型" aria-hidden="true">#</a> 浮动模型</h2><p>块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示，怎么办呢？不要着急，设置元素浮动就可以实现这一愿望。任何元素在默认情况下是不能浮动的，但可以用CSS定义为浮动，如div、p、table、img等元素都可以被定义为浮动。如下代码可以实现两个div元素一行显示。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span>2px red solid<span class="token punctuation">;</span>
    <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

&lt;div id=<span class="token string">&quot;div1&quot;</span>&gt;&lt;/div&gt;

&lt;div id=<span class="token string">&quot;div2&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：设置浮动的同时一定要先设置块状元素的宽度，且需要浮动的几个元素宽度加起来一定要小于容器元素的宽度。</p><h2 id="层模型" tabindex="-1"><a class="header-anchor" href="#层模型" aria-hidden="true">#</a> 层模型</h2><p>什么是层布局模型？层布局模型就像是图像软件PhotoShop中非常流行的图层编辑功能一样，每个图层能够精确定位操作，但在网页设计领域，由于网页大小的活动性，层布局没能受到热捧。但是在网页上局部使用层布局还是有其方便之处的。下面我们来学习一下html中的层布局。</p><p>如何让html元素在网页中精确定位，就像图像软件PhotoShop中的图层一样可以对每个图层能够精确定位操作。CSS定义了一组定位（positioning）属性来支持层布局模型。</p><p>层模型有三种形式：</p><ol><li><p>绝对定位(position: absolute)</p></li><li><p>相对定位(position: relative)</p></li><li><p>固定定位(position: fixed)</p></li></ol><h3 id="层模型-绝对定位-相对于父类" tabindex="-1"><a class="header-anchor" href="#层模型-绝对定位-相对于父类" aria-hidden="true">#</a> 层模型--绝对定位（相对于父类）</h3><p>如果想为元素设置层模型中的绝对定位，需要设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。</p><p>如下面代码可以实现div元素相对于浏览器窗口向右移动100px，向下移动50px。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span>2px red solid<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

&lt;div id=<span class="token string">&quot;div1&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="层模型-相对定位-相对于以前" tabindex="-1"><a class="header-anchor" href="#层模型-相对定位-相对于以前" aria-hidden="true">#</a> 层模型--相对定位（相对于以前）</h3><p>如果想为元素设置层模型中的相对定位，需要设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。</p><p>如下代码实现相对于以前位置向下移动50px，向右移动100px;</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#div1</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span>2px red solid<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

&lt;div id=<span class="token string">&quot;div1&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="层模型-固定定位-相对于网页窗口" tabindex="-1"><a class="header-anchor" href="#层模型-固定定位-相对于网页窗口" aria-hidden="true">#</a> 层模型--固定定位（相对于网页窗口）</h3><p>固定住某一坐标。</p><p>fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed?属性功能相同。以下代码可以实现相对于浏览器视图向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#div1</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span>2px red solid<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="relative与absolute组合使用" tabindex="-1"><a class="header-anchor" href="#relative与absolute组合使用" aria-hidden="true">#</a> Relative与Absolute组合使用</h2><p>小伙伴们学习了12-6小节的相对定位的方法：使用position:absolute可以实现被设置元素相对于浏览器（body）设置定位以后，大家有没有想过可不可以相对于其它元素进行定位呢？答案是肯定的，当然可以。使用position:relative来帮忙，但是必须遵守下面规范：</p><p>1、参照定位的元素必须是相对定位元素的前辈元素：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--参照定位的元素--&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>相对参照元素进行定位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--相对定位元素--&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面代码可以看出box1是box2的父元素（父元素当然也是前辈元素了）。</p><p>2、参照定位的元素必须加入position:relative;</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#box1</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#box2</span><span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样box2就可以相对于父元素box1定位了（这里注意参照物就可以不是浏览器了，而可以自由设置了）。</p>`,277))])}const m=e(d,[["render",k],["__file","html_l-XCTPBqa.html.vue"]]);export{m as default};
