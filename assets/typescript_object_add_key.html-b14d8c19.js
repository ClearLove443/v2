import{_ as n,V as a,W as e,a0 as t}from"./framework-7c77a285.js";const p={};function o(c,s){return a(),e("div",null,s[0]||(s[0]=[t(`<p>如果是自己定义的对象，想动态给对象增加 key，value，obj.xx=xx,obj[xx]=xx，都会报错，一种优雅快速的方式是：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">LooseObject</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj<span class="token operator">:</span> LooseObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式还可以对对象做一些类型规则，比如在 LooseObject 里加必须的字段和其他字段必须接受的类型等。</p>`,3)]))}const l=n(p,[["render",o],["__file","typescript_object_add_key.html.vue"]]);export{l as default};
