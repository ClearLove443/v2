import{_ as s,V as a,W as e,a0 as t}from"./framework-7c77a285.js";const p={};function c(l,n){return a(),e("div",null,n[0]||(n[0]=[t(`<p>Resource 下的文件是存在于 jar 这个文件里面，在磁盘上是没有真实路径存在的，它其实是位于 jar 内部的一个路径。所以通过 ResourceUtils.getFile 或者 this.g etClass().getResource(&quot;&quot;)方法无法正确获取文件。</p><p>这种情况下可以采用流的方式来读取文件，拿到文件流再进行相关的操作。如果你使用 Spring 框架的话，可以采用 ClassPathResource 来读取文件流，</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token doc-comment comment">/**
   * read jar config file
   *
   * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
   *
   *
   */</span>
  <span class="token keyword">public</span> <span class="token class-name">File</span> <span class="token function">readJarConfFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> jarConfFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ClassPathResource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span>jarConfFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">File</span> confCopyFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>jarConfFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    inputStream <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">copyInputStreamToFile</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> confCopyFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> confCopyFile<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拿到目标文件后，再按照正常的取法如 ResourceUtils.getFile，读取即可。 使用完后，可以把复制出来的文件删除掉</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>      <span class="token comment">// delete krb5conf file</span>
      <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">deleteQuietly</span><span class="token punctuation">(</span>krb5confCopyFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const i=s(p,[["render",c],["__file","springboot_read_jar_config_file.html.vue"]]);export{i as default};
