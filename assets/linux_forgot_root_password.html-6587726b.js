import{_ as r,D as d,V as o,W as t,a0 as i,Y as a,Z as s,$ as l}from"./framework-e0f7ab62.js";const p={},c={href:"https://link.zhihu.com/?target=https%3A//blog.csdn.net/hengshujiyi/article/details/45972533",target:"_blank",rel:"noopener noreferrer"},u={href:"https://jingyan.baidu.com/article/6181c3e080d479152ef153ac.html",target:"_blank",rel:"noopener noreferrer"};function m(b,e){const n=d("ExternalLinkIcon");return o(),t("div",null,[e[3]||(e[3]=i(`<pre><code>linux账户保存在/etc/passwd，密码保存在/etc/shadow文件中。前者无需超级用户权限即可阅读。
</code></pre><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ll /etc/passwd /etc/shadow
-rw-r--r-- <span class="token number">1</span> root root   <span class="token number">2055</span> Sep <span class="token number">26</span> <span class="token number">12</span>:30 /etc/passwd
-rw-r----- <span class="token number">1</span> root shadow <span class="token number">1112</span> Nov <span class="token number">24</span> <span class="token number">22</span>:54 /etc/shadow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>通过man 5 passwd，man 5 shadow可查看文件中各字段含义。
</code></pre><p>如果你只有 root 用户，而忘记了密码，那没办法，即使暴力破解或者字典破解，由于你不知道加密算法中使用的 salt，是破解不了的。</p><p>但是如果你的某个用户拥有 sudoer 权限的话，即使忘了 root 密码，也还是可以修改的。可能你并不了解这里面的加密算法以及 salt 是什么，别急，接下来我把背景知识补充一下。</p><h2 id="什么是加密函数" tabindex="-1"><a class="header-anchor" href="#什么是加密函数" aria-hidden="true">#</a> 什么是加密函数</h2><p>密码的散列存储 如果你用过 ss 科学上网，你可能听说过一下这些中的某一个：</p><ol><li>none</li><li>rc4</li><li>rc4-md5</li><li>rc4-md5-6</li><li>aes-128-ctr</li><li>aes-192-ctr</li><li>aes-256-ctr</li><li>aes-128-cfb</li><li>aes-192-cfb</li><li>aes-256-cfb</li><li>aes-128-cfb8</li><li>aes-192-cfb8</li><li>aes-256-cfb8</li><li>salsa20</li><li>chacha20</li><li>chacha20-ietf</li></ol>`,8)),a("p",null,[a("a",c,[e[0]||(e[0]=s("AES,SHA1,DES,RSA,MD5 区别 - CSDN 博客",-1)),l(n)]),e[1]||(e[1]=s(" 这里有一篇文章专门讲这些加密方式的区别",-1))]),e[4]||(e[4]=i(`<p>总而言之，如果你的密码以明文的方式直接存储在数据库中是很危险的。于是我们想了一种办法，对密码进行 SHA512 加密，所谓加密，你可以理解为一个函数，确切的说是一个不可逆的散列函数（哈希函数），当你把密码当做这个函数的输入，会输出一串加密过的密码，如果你的机器被黑客黑了，他最多只能得到你加密过的密码。同样，每次你输入密码，系统会把密码输入哈希函数，拿输出的值与数据库中的值比较，如果你们有相同的输出，则你们是同一个人，如果函数的输出不同，你们就不是一个人。</p><p>比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mkpasswd <span class="token parameter variable">-m</span> sha-512
Password: ａｐｐｌｅ
<span class="token variable">$6</span><span class="token variable">$LyVpT</span>/aetS<span class="token variable">$mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV</span>/eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>在ubuntu系统中使用sudo apt-get install whois可以获得这个mkpasswd命令，通过这个命令我们可以对密码进行加密。
</code></pre><p>我们看到，如果你的密码是 apple，密码的散列值貌似是这么一长串。实际上，这一长串密码被&quot;$&quot;分割，第一个阿拉伯数字，代表了加密方法的种类， 这里 6 就代表了 sha-512 这种加密方式。第二个我们一会再说。第三个即为 apple 的散列值。系统中不存储 apple 这个密码，存储的是下面的散列值。当你再次输入密码的时候，会再次生成散列值，用于和数据库中的进行比较。</p><h2 id="什么是-salt" tabindex="-1"><a class="header-anchor" href="#什么是-salt" aria-hidden="true">#</a> 什么是 salt？</h2><p>举个例子，比如，如果你的密码仅仅是一个单词，黑客有一本字典，这个字典的每个单词后面都对应了这个单词的散列值。然后黑客看着你经过加密的密码，一页一页翻看字典。没翻几页他就发现，单词 apple 的散列值咋和你加密过的密码一样？</p><pre><code>加Salt可以一定程度上解决这一问题。所谓加Salt，就是加点“佐料”。其基本想法是这样的——当用户首次提供密码时（通常是注册时），由系统自动往这个密码里撒一些“佐料”，然后再散列。而当用户登录时，系统为用户提供的代码撒上同样的“佐料”，然后散列，再比较散列值，已确定密码是否正确。
</code></pre><p>我们刚才看到的<code>$6$LyVpT/aetS$mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV/eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ.</code> 这一串密文中， LyVpT/aetS 即为加入的“盐”</p><h2 id="如何修改密码" tabindex="-1"><a class="header-anchor" href="#如何修改密码" aria-hidden="true">#</a> 如何修改密码？</h2><h3 id="添加用户" tabindex="-1"><a class="header-anchor" href="#添加用户" aria-hidden="true">#</a> 添加用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> adduser username

<span class="token function">sudo</span> <span class="token function">cat</span> /etc/shadow

tom:<span class="token variable">$6</span><span class="token variable">$iXDRKGEq</span><span class="token variable">$3FdFbXuwnPk7lSozGCsIws3q</span>/o3HhYYpdiKqt6cQ3yGMIQxMLO93KXRAgD5uJJaCQhvZOiuEwkh6ti8I3AYL50:17599:0:99999:7:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加用户到-sudo-用户组" tabindex="-1"><a class="header-anchor" href="#添加用户到-sudo-用户组" aria-hidden="true">#</a> 添加用户到 sudo 用户组</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">sudo</span> username
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户" aria-hidden="true">#</a> 删除用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">userdel</span> username

参数：
  <span class="token parameter variable">-r</span>  remove home directory and mail spool
  <span class="token parameter variable">-f</span>  force removal of files, even <span class="token keyword">if</span> not owned by user
  <span class="token parameter variable">-z</span>  remove any SELinux user mapping <span class="token keyword">for</span> the user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我在 linux 中添加了一个用户 tom 来作为演示。 这天 tom 忘记了自己的密码，很着急，想知道如何找回密码。我说，密码是找不回了，但是我可以帮你修改原来的密码。</p><p>于是乎，我把上面 apple 的散列值替换了 tom 的散列值</p><p><code>tom:$6$LyVpT/aetS$mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV/eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ.:17599:0:99999:7:::</code></p><p><code>tom你好， apple就是你现在的新密码了。</code></p><p>如果你没有超级用户权限，也忘了密码的话，可以启用单用户模式</p>`,21)),a("p",null,[a("a",u,[e[2]||(e[2]=s("Red Hat Linux 进入单用户模式 修改 root 密码",-1)),l(n)])]),e[5]||(e[5]=a("p",null,[s("如果你有 sudo 权限，"),a("code",null,"sudo passwd root"),s("就行。")],-1))])}const h=r(p,[["render",m],["__file","linux_forgot_root_password.html.vue"]]);export{h as default};
