import{_ as a,V as n,W as m,a0 as t}from"./framework-7c77a285.js";const e={};function p(i,s){return n(),m("div",null,s[0]||(s[0]=[t('<p>各编程语言中 Base64 编码解码的方法 (其中 String str 表示原文本，String base64 表示编码结果)</p><p>| 语言 | Base64 编码 | Base64 解码 | | :----------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- | ----------- | | JavaScript | base64 = btoa(str); // IE 10- 需要引入 base64.js 且不支持汉字 <br> 或 <br> // 需要引入 CryptoJS <br> var s = CryptoJS.enc.Utf8.parse(str); <br> base64 = CryptoJS.enc.Base64.stringify(s); | str = atob(base64); // IE 10- 需要引入 base64.js 且不支持汉字 <br> 或 <br> // 需要引入 CryptoJS<br> var s = CryptoJS.enc.Base64.parse(base64); <br> str = s.toString(CryptoJS.enc.Utf8); | | Linux Shell <br>(以 test 为例) | <code>// dGVzdAo=</code> <br><code>$ echo test | base64</code> | <code>// test </code><br> <code>$ echo dGVzdAo= | base64 -d </code> | | Java | base64 = new BASE64Encoder()<br>.encode(str.getBytes()); | str = new String(new BASE64Decoder()<br> .decodeBuffer(base64)); | | Python | import base64 <br> base64 = base64.b64encode(str) | import base64 str = base64.b64decode(base64) | | PHP | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mn>64</mn><mo>=</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><msub><mn>64</mn><mi>e</mi></msub><mi>n</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">base64 = base64_encode(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mord">64</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mord">6</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mord mathnormal">co</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mopen">(</span></span></span></span>str); | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mo>=</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><msub><mn>64</mn><mi>d</mi></msub><mi>e</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">str = base64_decode(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mord">6</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">eco</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mopen">(</span></span></span></span>base64); | | C#/.NET | byte[] bytes = System.Text.Encoding.UTF8.GetBytes(str);<br>base64 = System.Convert.ToBase64String(bytes); | byte[] bytes = System.Convert<br> .FromBase64String(base64); <br> str = System.Text.Encoding.UTF8<br>.GetString(bytes); | | Perl | use MIME::Base64; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mn>64</mn><mo>=</mo><mi>e</mi><mi>n</mi><mi>c</mi><mi>o</mi><mi>d</mi><msub><mi>e</mi><mi>b</mi></msub><mi>a</mi><mi>s</mi><mi>e</mi><mn>64</mn><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">base64 = encode_base64(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mord">64</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">co</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mord">64</span><span class="mopen">(</span></span></span></span>str); | use MIME::Base64; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mo>=</mo><mi>d</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>d</mi><msub><mi>e</mi><mi>b</mi></msub><mi>a</mi><mi>s</mi><mi>e</mi><mn>64</mn><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">str = decode_base64(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">eco</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mord">64</span><span class="mopen">(</span></span></span></span>base64); | | Golang | import b64 &quot;encoding/base64&quot; <br> ... <br> base64 := b64.StdEncoding<br>.EncodeToString([]byte(str)) | import b64 &quot;encoding/base64&quot; <br> ... <br> str := b64.StdEncoding<br>.DecodeString(base64) | | Ruby | require &quot;base64&quot; base64 = Base64.encode64(str) | require &quot;base64&quot; str = Base64.decode64(base64) | | MySQL/MariaDB | // 参数也可以是一个字段 <br> SELECT TO_BASE64(str); | // 参数也可以是一个字段 <br> SELECT FROM_BASE64(base64); | | PostgreSQL | SELECT encode(str, &#39;base64&#39;); | SELECT decode(base64, &#39;base64&#39;); |</p>',2)]))}const r=a(e,[["render",p],["__file","base64_encoding_decoding.html.vue"]]);export{r as default};
