import{_ as e,V as s,W as i,a0 as l}from"./framework-e0f7ab62.js";const n={};function d(t,a){return s(),i("div",null,[...a[0]||(a[0]=[l(`<ol><li>本地修改了一些文件 (并没有使用 git add 到暂存区)，想放弃修改</li></ol><ul><li>单个文件/文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout -- filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>所有文件/文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>本地新增了一些文件 (并没有 git add 到暂存区)，想放弃修改</li></ol><ul><li>单个文件/文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span>  <span class="token parameter variable">-rf</span> filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>所有文件：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-xdf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>删除新增的文件，如果文件已经已经 git add 到暂存区，并不会删除！</p></blockquote><ul><li>所有文件和文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-xdff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>[谨慎操作] 本命令删除新增的文件和文件夹，如果文件已经已经 git add 到暂存区，并不会删除！</p></blockquote><ol start="3"><li>本地修改/新增了一些文件，已经 git add 到暂存区，想放弃修改</li></ol><ul><li>单个文件/文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset HEAD filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>所有文件/文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset HEAD <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>本地通过 git add 和 git commit 后，想要撤销此次 commit</li></ol><ul><li>撤销 commit, 同时保留该 commit 修改：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset commit_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个 commit_id 是你想要回到的那个节点，可以通过 git log 查看，可以只选前 6 位。</p><blockquote><p>撤销之后，你所做的已经 commit 的修改还在工作区！</p></blockquote><ul><li>撤销 commit, 同时本地删除该 commit 修改：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> commit_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个 commit_id 是你想要回到的那个节点，可以通过 git log 查看，可以只选前 6 位</p><blockquote><p>[谨慎操作] 撤销之后，你所做的已经 commit 的修改将会清除，仍在工作区/暂存区的代码也将会清除！</p></blockquote>`,28)])])}const o=e(n,[["render",d],["__file","git-abandon-update.html.vue"]]);export{o as default};
