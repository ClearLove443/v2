import{_ as s,V as a,W as e,a0 as t}from"./framework-e0f7ab62.js";const p={};function o(c,n){return a(),e("div",null,[...n[0]||(n[0]=[t(`<h1 id="服务器端证书配置" tabindex="-1"><a class="header-anchor" href="#服务器端证书配置" aria-hidden="true">#</a> 服务器端证书配置</h1><p>服务器端需两个文件: <code>ca.pem</code>、<code>server.pem</code></p><h2 id="生成-ca-pem" tabindex="-1"><a class="header-anchor" href="#生成-ca-pem" aria-hidden="true">#</a> 生成 ca.pem</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl req <span class="token parameter variable">-out</span> ca.pem <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-subj</span> <span class="token string">&quot;/C=CN/ST=BeiJing/O=bigdata/CN=root/CN=docker.wsl2.mongodb/emailAddress=yangxc@163.com&quot;</span>
<span class="token comment"># 此处会要求配置ca.pem密码，后续将会用到</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参数说明</p><p>-x509： 用于生成自签证书，如果不是自签证书则不需要此项</p><p>-days: 证书的有效期限，默认是 365 天</p></blockquote><h2 id="生成-server-pem" tabindex="-1"><a class="header-anchor" href="#生成-server-pem" aria-hidden="true">#</a> 生成 server.pem</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成服务器端私钥</span>
openssl genrsa <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>
<span class="token comment"># 生成服务器端申请文件</span>
openssl req <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-new</span> <span class="token parameter variable">-out</span> server.req <span class="token parameter variable">-subj</span> <span class="token string">&quot;/C=CN/ST=BeiJing/O=bigdata/CN=server1/CN=localhost/CN=docker.wsl2.mongodb/emailAddress=yangxc@163.com&quot;</span>
<span class="token comment"># 生成服务器端证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> server.req <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> privkey.pem <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> server.crt <span class="token parameter variable">-days</span> <span class="token number">3650</span>

<span class="token comment"># Can&#39;t load /root/.rnd into RNG</span>
openssl rand <span class="token parameter variable">-writerand</span> /home/ubuntu/.rnd

<span class="token comment"># 合并服务器端私钥和服务器端证书，生成server.pem</span>
<span class="token function">cat</span> server.key server.crt <span class="token operator">&gt;</span> server.pem
<span class="token comment"># 校验服务器端pem文件</span>
openssl verify <span class="token parameter variable">-CAfile</span> ca.pem server.pem
server.pem: OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="服务器端配置" tabindex="-1"><a class="header-anchor" href="#服务器端配置" aria-hidden="true">#</a> 服务器端配置</h1><h2 id="修改配置文件" tabindex="-1"><a class="header-anchor" href="#修改配置文件" aria-hidden="true">#</a> 修改配置文件</h2><p>mongodb 的 ssl/tsl 配置默认是关闭的，需更改配置文件进行开启</p><ul><li>ssl</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> mongod.conf

net:
<span class="token comment">#  port: 27017</span>
<span class="token comment">#  bindIp: 127.0.0.1</span>
  ssl:
    <span class="token comment"># 必须使用ssl连接</span>
    mode: requireSSL
    <span class="token comment"># 必须使用绝对路径</span>
    PEMKeyFile: /etc/server.pem
    <span class="token comment"># 必须使用绝对路径</span>
    CAFile: /etc/ca.pem
    <span class="token comment"># 允许不可用主机名</span>
    allowInvalidHostnames: <span class="token boolean">true</span>
    <span class="token comment"># 允许使用自签证书,如果使用自签证书必须配置该项，否则会认证失败</span>
    allowInvalidCertificates: <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tls</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> mongod.conf

net:
<span class="token comment">#  port: 27017</span>
<span class="token comment">#  bindIp: 127.0.0.1</span>
  tls:
    <span class="token comment"># 必须使用ssl连接</span>
    mode: requireTLS
    <span class="token comment"># 必须使用绝对路径</span>
    certificateKeyFile: /etc/server.pem
    <span class="token comment"># 必须使用绝对路径</span>
    CAFile: /etc/ca.pem
    <span class="token comment"># 允许不可用主机名</span>
    allowInvalidHostnames: <span class="token boolean">true</span>
    <span class="token comment"># 允许使用自签证书,如果使用自签证书必须配置该项，否则会认证失败</span>
    allowInvalidCertificates: <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="启动-mongodb-数据库" tabindex="-1"><a class="header-anchor" href="#启动-mongodb-数据库" aria-hidden="true">#</a> 启动 MongoDB 数据库</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> mongo_test <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span> always <span class="token parameter variable">-p</span> <span class="token number">27017</span>:27017 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MONGO_INITDB_ROOT_USERNAME</span><span class="token operator">=</span>admin <span class="token parameter variable">-e</span> <span class="token assign-left variable">MONGO_INITDB_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">-v</span> /home/ubuntu/mongo/mongod.conf:/etc/mongod.conf <span class="token parameter variable">-v</span> /home/ubuntu/mongo/etc/ca.pem:/etc/ca.pem <span class="token parameter variable">-v</span> /home/ubuntu/mongo/etc/server.pem:/etc/server.pem mongo <span class="token parameter variable">--auth</span> <span class="token parameter variable">--config</span> /etc/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="客户端证书配置" tabindex="-1"><a class="header-anchor" href="#客户端证书配置" aria-hidden="true">#</a> 客户端证书配置</h1><h2 id="生成-client-pem" tabindex="-1"><a class="header-anchor" href="#生成-client-pem" aria-hidden="true">#</a> 生成 client.pem</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成客户端私钥</span>
openssl genrsa <span class="token parameter variable">-out</span> client.key <span class="token number">2048</span>
<span class="token comment"># 生成客户端申请文件</span>
openssl req <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-new</span> <span class="token parameter variable">-out</span> client.req <span class="token parameter variable">-subj</span> <span class="token string">&quot;/C=CN/ST=BeiJing/O=bigdata/CN=server1/CN=localhost/CN=docker.wsl2.mongodb/emailAddress=yangxc@163.com&quot;</span>
<span class="token comment"># 生成客户端证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> client.req <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> privkey.pem <span class="token parameter variable">-CAserial</span> ca.srl  <span class="token parameter variable">-out</span> client.crt <span class="token parameter variable">-days</span> <span class="token number">3650</span>
<span class="token comment"># 合并客户端私钥和客户端证书，生成client.pem</span>
<span class="token function">cat</span> client.key client.crt <span class="token operator">&gt;</span> client.pem
<span class="token comment"># 校验客户端pem文件</span>
openssl verify <span class="token parameter variable">-CAfile</span> ca.pem client.pem
client.pem: OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="测试连接" tabindex="-1"><a class="header-anchor" href="#测试连接" aria-hidden="true">#</a> 测试连接</h1><p>将<code>ca.pem</code>和<code>client.pem/server.pem</code>拷贝到客户端主机，然后用 navicat 测试连接</p><h1 id="java-客户端-ssl-配置" tabindex="-1"><a class="header-anchor" href="#java-客户端-ssl-配置" aria-hidden="true">#</a> java 客户端 ssl 配置</h1><p>两种方法，一种是直接导入到 jvm ,第二种是动态管理</p><h2 id="生成-truststore-和-keystore" tabindex="-1"><a class="header-anchor" href="#生成-truststore-和-keystore" aria-hidden="true">#</a> 生成 trustStore 和 keyStore</h2><h3 id="keytool-方式" tabindex="-1"><a class="header-anchor" href="#keytool-方式" aria-hidden="true">#</a> keytool 方式</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#根证书信息 trustStore</span>
keytool <span class="token parameter variable">-import</span> <span class="token parameter variable">-keystore</span> cacerts <span class="token parameter variable">-file</span> ca.pem <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参数说明：</p><p>-storepass: 密钥库密码</p><p>-keystore cacerts: cacertes 为密钥库文件</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#客户端 keyStore</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-out</span> mongodb.pkcs12 <span class="token parameter variable">-in</span> client.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="openssl-方式" tabindex="-1"><a class="header-anchor" href="#openssl-方式" aria-hidden="true">#</a> openssl 方式</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#根证书信息 trustStore</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-out</span> server.p12 <span class="token parameter variable">-in</span> server.crt <span class="token parameter variable">-inkey</span> server.key <span class="token parameter variable">-name</span> server.12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#客户端 keyStore</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-out</span> keystore <span class="token parameter variable">-in</span> client.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第一种-ssl-方法" tabindex="-1"><a class="header-anchor" href="#第一种-ssl-方法" aria-hidden="true">#</a> 第一种 ssl 方法</h2><h3 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖" aria-hidden="true">#</a> 添加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mongo-java-driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接代码" tabindex="-1"><a class="header-anchor" href="#连接代码" aria-hidden="true">#</a> 连接代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClientURI</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Mongo</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 配置信任库</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.trustStore&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cacerts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.trustStorePassword&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 配置信任证书</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.keyStore&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mongodb.pkcs12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.keyStorePassword&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 连接mongo数据库</span>
    <span class="token class-name">MongoClientURI</span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClientURI</span><span class="token punctuation">(</span><span class="token string">&quot;mongodb://admin:123456@localhost:27017/?ssl=true&amp;authSource=admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MongoClient</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取mongo数据库中的库名</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">listDatabaseNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第二种动态加载-ssl" tabindex="-1"><a class="header-anchor" href="#第二种动态加载-ssl" aria-hidden="true">#</a> 第二种动态加载 ssl</h2><ol><li>通过 System setProperty 设置程序运行时属性的方式，可能会增加程序的不安全性，特别是在使用第三方库的时候。自定义 KeyManager TrustManager，生成定制 SSLContext 实例可以解决这个问题，而且不会污染系统属性。</li><li>不需要添加服务端证书至 JVM 证书库，只需在程序中指定 jdk 支持格式的证书、client 端 keystore 即可。</li></ol><h3 id="添加依赖-1" tabindex="-1"><a class="header-anchor" href="#添加依赖-1" aria-hidden="true">#</a> 添加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mongo-java-driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-data-mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>httpcore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接代码-1" tabindex="-1"><a class="header-anchor" href="#连接代码-1" aria-hidden="true">#</a> 连接代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyStore</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">SecureRandom</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">SocketFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">KeyManagerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">SSLContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">TrustManagerFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClientOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoCredential</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">ServerAddress</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Mongo</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>

      <span class="token class-name">String</span> trustStore <span class="token operator">=</span> <span class="token string">&quot;cacerts&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> trustStorePassword <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>

      <span class="token class-name">String</span> keyStore <span class="token operator">=</span> <span class="token string">&quot;mongodb.pkcs12&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> keyStorePassword <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">;</span>

      <span class="token comment">// 添加SSL认证</span>
      <span class="token class-name">SocketFactory</span> socketFactory <span class="token operator">=</span> <span class="token function">createSocketFactory</span><span class="token punctuation">(</span>trustStore<span class="token punctuation">,</span> trustStorePassword<span class="token punctuation">,</span> keyStore<span class="token punctuation">,</span> keyStorePassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 设置ssl配置</span>
      <span class="token class-name">MongoClientOptions</span> sslOptions <span class="token operator">=</span> <span class="token class-name">MongoClientOptions</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">socketFactory</span><span class="token punctuation">(</span>socketFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sslEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">sslInvalidHostNameAllowed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// init mongo</span>
      <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> dbName <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">27017</span><span class="token punctuation">;</span>
      <span class="token class-name">MongoCredential</span> credential <span class="token operator">=</span> <span class="token class-name">MongoCredential</span><span class="token punctuation">.</span><span class="token function">createCredential</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> dbName<span class="token punctuation">,</span> password<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">MongoClient</span> client2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServerAddress</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> credential<span class="token punctuation">,</span> sslOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>client2<span class="token punctuation">.</span><span class="token function">listDatabaseNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      client2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// TODO Auto-generated catch block</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * 创建一个SocketFactory.
   *
   * <span class="token keyword">@param</span> <span class="token parameter">trustStorePath</span> keyStore 真实路径
   * <span class="token keyword">@param</span> <span class="token parameter">trustStorePwd</span>  keyStore 真实路径
   * <span class="token keyword">@param</span> <span class="token parameter">keyStorePath</span>   keyStore 路径
   * <span class="token keyword">@param</span> <span class="token parameter">keyStorePwd</span>    keyStore密码
   * <span class="token keyword">@return</span>
   * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
   */</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SocketFactory</span> <span class="token function">createSocketFactory</span><span class="token punctuation">(</span><span class="token class-name">String</span> trustStorePath<span class="token punctuation">,</span> <span class="token class-name">String</span> trustStorePwd<span class="token punctuation">,</span> <span class="token class-name">String</span> keyStorePath<span class="token punctuation">,</span>
      <span class="token class-name">String</span> keyStorePwd<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">SSLContext</span> sslContext <span class="token operator">=</span> <span class="token class-name">SSLContext</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SSL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">KeyStore</span> keyStore <span class="token operator">=</span> <span class="token class-name">KeyStore</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">KeyStore</span><span class="token punctuation">.</span><span class="token function">getDefaultType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FileInputStream</span> myKeyStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>keyStorePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    keyStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>myKeyStore<span class="token punctuation">,</span> keyStorePwd<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myKeyStore<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// default SunX509</span>
    <span class="token class-name">KeyManagerFactory</span> kmf <span class="token operator">=</span> <span class="token class-name">KeyManagerFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">KeyManagerFactory</span><span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    kmf<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>keyStore<span class="token punctuation">,</span> keyStorePwd<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// set up a TrustManager that trusts everything</span>
    <span class="token comment">// 1.trust specific sslCaKeystore</span>
    <span class="token class-name">KeyStore</span> trustStore <span class="token operator">=</span> <span class="token class-name">KeyStore</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">KeyStore</span><span class="token punctuation">.</span><span class="token function">getDefaultType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">TrustManagerFactory</span> tmf <span class="token operator">=</span> <span class="token class-name">TrustManagerFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">TrustManagerFactory</span><span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FileInputStream</span> myTrustStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>trustStorePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    trustStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>myTrustStore<span class="token punctuation">,</span> trustStorePwd<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myTrustStore<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tmf<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>trustStore<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sslContext<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>kmf<span class="token punctuation">.</span><span class="token function">getKeyManagers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tmf<span class="token punctuation">.</span><span class="token function">getTrustManagers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> sslContext<span class="token punctuation">.</span><span class="token function">getSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42)])])}const i=s(p,[["render",o],["__file","mongo_ssl_tsl.html.vue"]]);export{i as default};
